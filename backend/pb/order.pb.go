// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Order_Status int32

const (
	Order_NONE       Order_Status = 0
	Order_PLACED     Order_Status = 1
	Order_IN_TRANSIT Order_Status = 2
	Order_DELIVERED  Order_Status = 3
)

var Order_Status_name = map[int32]string{
	0: "NONE",
	1: "PLACED",
	2: "IN_TRANSIT",
	3: "DELIVERED",
}

var Order_Status_value = map[string]int32{
	"NONE":       0,
	"PLACED":     1,
	"IN_TRANSIT": 2,
	"DELIVERED":  3,
}

func (x Order_Status) String() string {
	return proto.EnumName(Order_Status_name, int32(x))
}

func (Order_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1, 0}
}

type CustomerInfo struct {
	CustomerId           string   `protobuf:"bytes,1,opt,name=customerId,proto3" json:"customerId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DeliveryLocation     *LatLng  `protobuf:"bytes,3,opt,name=deliveryLocation,proto3" json:"deliveryLocation,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerInfo) Reset()         { *m = CustomerInfo{} }
func (m *CustomerInfo) String() string { return proto.CompactTextString(m) }
func (*CustomerInfo) ProtoMessage()    {}
func (*CustomerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *CustomerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerInfo.Unmarshal(m, b)
}
func (m *CustomerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerInfo.Marshal(b, m, deterministic)
}
func (m *CustomerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerInfo.Merge(m, src)
}
func (m *CustomerInfo) XXX_Size() int {
	return xxx_messageInfo_CustomerInfo.Size(m)
}
func (m *CustomerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerInfo proto.InternalMessageInfo

func (m *CustomerInfo) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *CustomerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CustomerInfo) GetDeliveryLocation() *LatLng {
	if m != nil {
		return m.DeliveryLocation
	}
	return nil
}

func (m *CustomerInfo) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type Order struct {
	OrderId              string        `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	StoreLocation        *LatLng       `protobuf:"bytes,2,opt,name=storeLocation,proto3" json:"storeLocation,omitempty"`
	Customer             *CustomerInfo `protobuf:"bytes,3,opt,name=customer,proto3" json:"customer,omitempty"`
	Status               Order_Status  `protobuf:"varint,4,opt,name=status,proto3,enum=pb.Order_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Order) GetStoreLocation() *LatLng {
	if m != nil {
		return m.StoreLocation
	}
	return nil
}

func (m *Order) GetCustomer() *CustomerInfo {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *Order) GetStatus() Order_Status {
	if m != nil {
		return m.Status
	}
	return Order_NONE
}

type OrderId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderId) Reset()         { *m = OrderId{} }
func (m *OrderId) String() string { return proto.CompactTextString(m) }
func (*OrderId) ProtoMessage()    {}
func (*OrderId) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func (m *OrderId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderId.Unmarshal(m, b)
}
func (m *OrderId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderId.Marshal(b, m, deterministic)
}
func (m *OrderId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderId.Merge(m, src)
}
func (m *OrderId) XXX_Size() int {
	return xxx_messageInfo_OrderId.Size(m)
}
func (m *OrderId) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderId.DiscardUnknown(m)
}

var xxx_messageInfo_OrderId proto.InternalMessageInfo

func (m *OrderId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type LatLng struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng                  float64  `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatLng) Reset()         { *m = LatLng{} }
func (m *LatLng) String() string { return proto.CompactTextString(m) }
func (*LatLng) ProtoMessage()    {}
func (*LatLng) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{3}
}

func (m *LatLng) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatLng.Unmarshal(m, b)
}
func (m *LatLng) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatLng.Marshal(b, m, deterministic)
}
func (m *LatLng) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatLng.Merge(m, src)
}
func (m *LatLng) XXX_Size() int {
	return xxx_messageInfo_LatLng.Size(m)
}
func (m *LatLng) XXX_DiscardUnknown() {
	xxx_messageInfo_LatLng.DiscardUnknown(m)
}

var xxx_messageInfo_LatLng proto.InternalMessageInfo

func (m *LatLng) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *LatLng) GetLng() float64 {
	if m != nil {
		return m.Lng
	}
	return 0
}

type DeliveryInfo struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	DeliveryPersonName   string   `protobuf:"bytes,2,opt,name=deliveryPersonName,proto3" json:"deliveryPersonName,omitempty"`
	DeliveryPersonMobile string   `protobuf:"bytes,3,opt,name=deliveryPersonMobile,proto3" json:"deliveryPersonMobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeliveryInfo) Reset()         { *m = DeliveryInfo{} }
func (m *DeliveryInfo) String() string { return proto.CompactTextString(m) }
func (*DeliveryInfo) ProtoMessage()    {}
func (*DeliveryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{4}
}

func (m *DeliveryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliveryInfo.Unmarshal(m, b)
}
func (m *DeliveryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliveryInfo.Marshal(b, m, deterministic)
}
func (m *DeliveryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliveryInfo.Merge(m, src)
}
func (m *DeliveryInfo) XXX_Size() int {
	return xxx_messageInfo_DeliveryInfo.Size(m)
}
func (m *DeliveryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliveryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeliveryInfo proto.InternalMessageInfo

func (m *DeliveryInfo) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *DeliveryInfo) GetDeliveryPersonName() string {
	if m != nil {
		return m.DeliveryPersonName
	}
	return ""
}

func (m *DeliveryInfo) GetDeliveryPersonMobile() string {
	if m != nil {
		return m.DeliveryPersonMobile
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.Order_Status", Order_Status_name, Order_Status_value)
	proto.RegisterType((*CustomerInfo)(nil), "pb.CustomerInfo")
	proto.RegisterType((*Order)(nil), "pb.Order")
	proto.RegisterType((*OrderId)(nil), "pb.OrderId")
	proto.RegisterType((*LatLng)(nil), "pb.LatLng")
	proto.RegisterType((*DeliveryInfo)(nil), "pb.DeliveryInfo")
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077) }

var fileDescriptor_cd01338c35d87077 = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xc1, 0x6e, 0x9b, 0x40,
	0x10, 0xf5, 0x62, 0x87, 0xc4, 0x63, 0xc7, 0x45, 0xa3, 0xa8, 0xa2, 0xae, 0xd4, 0x46, 0x9c, 0x7c,
	0x88, 0x48, 0xeb, 0x4a, 0xed, 0x29, 0x87, 0x28, 0x46, 0x15, 0x12, 0xc5, 0x16, 0x8e, 0x7a, 0xad,
	0xc0, 0x6c, 0x28, 0x12, 0xde, 0x45, 0xcb, 0x3a, 0x52, 0xfe, 0xa1, 0x87, 0x7e, 0x5f, 0x3f, 0xa1,
	0x5f, 0x51, 0xb1, 0x0b, 0xc4, 0x56, 0x92, 0xde, 0x98, 0xf7, 0xde, 0xb0, 0xf3, 0xe6, 0x0d, 0x8c,
	0xb8, 0x48, 0xa9, 0x70, 0x4b, 0xc1, 0x25, 0x47, 0xa3, 0x4c, 0xa6, 0x6f, 0x33, 0xce, 0xb3, 0x82,
	0x5e, 0x2a, 0x24, 0xd9, 0xdd, 0x5d, 0xd2, 0x6d, 0x29, 0x1f, 0xb4, 0xc0, 0xf9, 0x4d, 0x60, 0x7c,
	0xb3, 0xab, 0x24, 0xdf, 0x52, 0xe1, 0xb3, 0x3b, 0x8e, 0xef, 0x00, 0x36, 0x6d, 0x9d, 0xda, 0xe4,
	0x9c, 0xcc, 0x86, 0xd1, 0x1e, 0x82, 0x08, 0x03, 0x16, 0x6f, 0xa9, 0x6d, 0x28, 0x46, 0x7d, 0xe3,
	0x67, 0xb0, 0x52, 0x5a, 0xe4, 0xf7, 0x54, 0x3c, 0x04, 0x7c, 0x13, 0xcb, 0x9c, 0x33, 0xbb, 0x7f,
	0x4e, 0x66, 0xa3, 0x39, 0xb8, 0x65, 0xe2, 0x06, 0xb1, 0x0c, 0x58, 0x16, 0x3d, 0xd1, 0xe0, 0x19,
	0x1c, 0x95, 0x3f, 0x39, 0xa3, 0xf6, 0x40, 0xfd, 0x4c, 0x17, 0xce, 0x5f, 0x02, 0x47, 0xcb, 0xda,
	0x03, 0xda, 0x70, 0xac, 0xcc, 0x74, 0x83, 0xb4, 0x25, 0x7e, 0x80, 0xd3, 0x4a, 0x72, 0x41, 0xbb,
	0xe7, 0x8c, 0x27, 0xcf, 0x1d, 0x0a, 0xf0, 0x02, 0x4e, 0x5a, 0x17, 0xcd, 0x6c, 0x56, 0x2d, 0xde,
	0xf7, 0x1e, 0x75, 0x0a, 0x9c, 0x81, 0x59, 0xc9, 0x58, 0xee, 0x2a, 0x35, 0xda, 0x44, 0x6b, 0xd5,
	0x50, 0xee, 0x5a, 0xe1, 0x51, 0xc3, 0x3b, 0x57, 0x60, 0x6a, 0x04, 0x4f, 0x60, 0x10, 0x2e, 0x43,
	0xcf, 0xea, 0x21, 0x80, 0xb9, 0x0a, 0xae, 0x6f, 0xbc, 0x85, 0x45, 0x70, 0x02, 0xe0, 0x87, 0x3f,
	0x6e, 0xa3, 0xeb, 0x70, 0xed, 0xdf, 0x5a, 0x06, 0x9e, 0xc2, 0x70, 0xe1, 0x05, 0xfe, 0x77, 0x2f,
	0xf2, 0x16, 0x56, 0xdf, 0x79, 0x03, 0xc7, 0xcb, 0xc6, 0xd3, 0x04, 0x8c, 0xbc, 0x35, 0x6a, 0xe4,
	0xa9, 0x73, 0x01, 0xa6, 0xb6, 0x82, 0x16, 0xf4, 0x8b, 0x58, 0x2a, 0x8a, 0x44, 0xf5, 0xa7, 0x42,
	0x58, 0xa6, 0x5c, 0xd7, 0x08, 0xcb, 0x9c, 0x5f, 0x04, 0xc6, 0x8b, 0x66, 0xc1, 0x2a, 0xc8, 0x97,
	0x97, 0xe7, 0x02, 0xb6, 0x51, 0xac, 0xa8, 0xa8, 0x38, 0x0b, 0x1f, 0x03, 0x7d, 0x86, 0xc1, 0x39,
	0x9c, 0x1d, 0xa2, 0xdf, 0x78, 0x92, 0x17, 0x54, 0xad, 0x71, 0x18, 0x3d, 0xcb, 0xcd, 0xff, 0x10,
	0x18, 0x2b, 0x63, 0x6b, 0x2a, 0xee, 0xf3, 0x0d, 0xc5, 0xf7, 0xd0, 0xff, 0x4a, 0x25, 0x8e, 0xba,
	0x45, 0xfa, 0xe9, 0x74, 0xd8, 0x15, 0x4e, 0x0f, 0x3f, 0x02, 0xac, 0x8a, 0x78, 0x43, 0x75, 0xf4,
	0x8f, 0xd4, 0xf4, 0xb5, 0xab, 0x0f, 0xd8, 0x6d, 0x0f, 0xd8, 0xf5, 0xea, 0x03, 0x76, 0x7a, 0x78,
	0x05, 0xaf, 0x1a, 0xcb, 0x39, 0xcb, 0x74, 0x9f, 0x0a, 0x6a, 0x7f, 0x0f, 0xff, 0x69, 0xff, 0x02,
	0x93, 0x46, 0x49, 0x53, 0xdd, 0x7d, 0x30, 0xdd, 0x8b, 0x8d, 0x89, 0xa9, 0x90, 0x4f, 0xff, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x74, 0xb2, 0xc4, 0x9e, 0x6b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	//4. delivery guys click link, sees orders on webpage
	Get(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*Order, error)
	//1. calls delivery/PublishOrder
	PlaceOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*empty.Empty, error)
	//6. changes status of Order to IN_TRANSIT, call messaging service to send a message to the customer that the order is in transit
	DeliveringOrder(ctx context.Context, in *DeliveryInfo, opts ...grpc.CallOption) (*empty.Empty, error)
	//9. changes status of Order to DELIVERED, call messaging service to send a message to the customer that the order is delivered
	DeliveredOrder(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*empty.Empty, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) Get(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/pb.OrderService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) PlaceOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.OrderService/PlaceOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) DeliveringOrder(ctx context.Context, in *DeliveryInfo, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.OrderService/DeliveringOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) DeliveredOrder(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.OrderService/DeliveredOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	//4. delivery guys click link, sees orders on webpage
	Get(context.Context, *OrderId) (*Order, error)
	//1. calls delivery/PublishOrder
	PlaceOrder(context.Context, *Order) (*empty.Empty, error)
	//6. changes status of Order to IN_TRANSIT, call messaging service to send a message to the customer that the order is in transit
	DeliveringOrder(context.Context, *DeliveryInfo) (*empty.Empty, error)
	//9. changes status of Order to DELIVERED, call messaging service to send a message to the customer that the order is delivered
	DeliveredOrder(context.Context, *OrderId) (*empty.Empty, error)
}

// UnimplementedOrderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServiceServer struct {
}

func (*UnimplementedOrderServiceServer) Get(ctx context.Context, req *OrderId) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedOrderServiceServer) PlaceOrder(ctx context.Context, req *Order) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlaceOrder not implemented")
}
func (*UnimplementedOrderServiceServer) DeliveringOrder(ctx context.Context, req *DeliveryInfo) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeliveringOrder not implemented")
}
func (*UnimplementedOrderServiceServer) DeliveredOrder(ctx context.Context, req *OrderId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeliveredOrder not implemented")
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).Get(ctx, req.(*OrderId))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_PlaceOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).PlaceOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderService/PlaceOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).PlaceOrder(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_DeliveringOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliveryInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).DeliveringOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderService/DeliveringOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).DeliveringOrder(ctx, req.(*DeliveryInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_DeliveredOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).DeliveredOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderService/DeliveredOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).DeliveredOrder(ctx, req.(*OrderId))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _OrderService_Get_Handler,
		},
		{
			MethodName: "PlaceOrder",
			Handler:    _OrderService_PlaceOrder_Handler,
		},
		{
			MethodName: "DeliveringOrder",
			Handler:    _OrderService_DeliveringOrder_Handler,
		},
		{
			MethodName: "DeliveredOrder",
			Handler:    _OrderService_DeliveredOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}
