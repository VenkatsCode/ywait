// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cart.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cart_Status int32

const (
	Cart_NONE    Cart_Status = 0
	Cart_CREATED Cart_Status = 1
	Cart_PLACED  Cart_Status = 2
	Cart_SHIPPED Cart_Status = 3
)

var Cart_Status_name = map[int32]string{
	0: "NONE",
	1: "CREATED",
	2: "PLACED",
	3: "SHIPPED",
}

var Cart_Status_value = map[string]int32{
	"NONE":    0,
	"CREATED": 1,
	"PLACED":  2,
	"SHIPPED": 3,
}

func (x Cart_Status) String() string {
	return proto.EnumName(Cart_Status_name, int32(x))
}

func (Cart_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bf731a5c8f9a516f, []int{0, 0}
}

type Cart struct {
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description          string           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Products             map[string]int32 `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TotalItems           int32            `protobuf:"varint,4,opt,name=totalItems,proto3" json:"totalItems,omitempty"`
	TotalCost            float64          `protobuf:"fixed64,5,opt,name=totalCost,proto3" json:"totalCost,omitempty"`
	Status               Cart_Status      `protobuf:"varint,6,opt,name=status,proto3,enum=pb.Cart_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Cart) Reset()         { *m = Cart{} }
func (m *Cart) String() string { return proto.CompactTextString(m) }
func (*Cart) ProtoMessage()    {}
func (*Cart) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf731a5c8f9a516f, []int{0}
}

func (m *Cart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cart.Unmarshal(m, b)
}
func (m *Cart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cart.Marshal(b, m, deterministic)
}
func (m *Cart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cart.Merge(m, src)
}
func (m *Cart) XXX_Size() int {
	return xxx_messageInfo_Cart.Size(m)
}
func (m *Cart) XXX_DiscardUnknown() {
	xxx_messageInfo_Cart.DiscardUnknown(m)
}

var xxx_messageInfo_Cart proto.InternalMessageInfo

func (m *Cart) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Cart) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Cart) GetProducts() map[string]int32 {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *Cart) GetTotalItems() int32 {
	if m != nil {
		return m.TotalItems
	}
	return 0
}

func (m *Cart) GetTotalCost() float64 {
	if m != nil {
		return m.TotalCost
	}
	return 0
}

func (m *Cart) GetStatus() Cart_Status {
	if m != nil {
		return m.Status
	}
	return Cart_NONE
}

type CartId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CartId) Reset()         { *m = CartId{} }
func (m *CartId) String() string { return proto.CompactTextString(m) }
func (*CartId) ProtoMessage()    {}
func (*CartId) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf731a5c8f9a516f, []int{1}
}

func (m *CartId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CartId.Unmarshal(m, b)
}
func (m *CartId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CartId.Marshal(b, m, deterministic)
}
func (m *CartId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CartId.Merge(m, src)
}
func (m *CartId) XXX_Size() int {
	return xxx_messageInfo_CartId.Size(m)
}
func (m *CartId) XXX_DiscardUnknown() {
	xxx_messageInfo_CartId.DiscardUnknown(m)
}

var xxx_messageInfo_CartId proto.InternalMessageInfo

func (m *CartId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CartQuantity struct {
	CartId               string   `protobuf:"bytes,1,opt,name=cartId,proto3" json:"cartId,omitempty"`
	ProductId            string   `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	Quantity             int32    `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CartQuantity) Reset()         { *m = CartQuantity{} }
func (m *CartQuantity) String() string { return proto.CompactTextString(m) }
func (*CartQuantity) ProtoMessage()    {}
func (*CartQuantity) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf731a5c8f9a516f, []int{2}
}

func (m *CartQuantity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CartQuantity.Unmarshal(m, b)
}
func (m *CartQuantity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CartQuantity.Marshal(b, m, deterministic)
}
func (m *CartQuantity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CartQuantity.Merge(m, src)
}
func (m *CartQuantity) XXX_Size() int {
	return xxx_messageInfo_CartQuantity.Size(m)
}
func (m *CartQuantity) XXX_DiscardUnknown() {
	xxx_messageInfo_CartQuantity.DiscardUnknown(m)
}

var xxx_messageInfo_CartQuantity proto.InternalMessageInfo

func (m *CartQuantity) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

func (m *CartQuantity) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *CartQuantity) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func init() {
	proto.RegisterEnum("pb.Cart_Status", Cart_Status_name, Cart_Status_value)
	proto.RegisterType((*Cart)(nil), "pb.Cart")
	proto.RegisterMapType((map[string]int32)(nil), "pb.Cart.ProductsEntry")
	proto.RegisterType((*CartId)(nil), "pb.CartId")
	proto.RegisterType((*CartQuantity)(nil), "pb.CartQuantity")
}

func init() { proto.RegisterFile("cart.proto", fileDescriptor_bf731a5c8f9a516f) }

var fileDescriptor_bf731a5c8f9a516f = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xc1, 0x6e, 0x9b, 0x40,
	0x10, 0x35, 0x60, 0x13, 0x7b, 0xdc, 0xba, 0x68, 0x54, 0x59, 0xc8, 0xad, 0x22, 0xca, 0xa5, 0xf4,
	0x82, 0x2b, 0xf7, 0x12, 0xb5, 0x27, 0x0b, 0x13, 0x15, 0xa9, 0x4a, 0x5c, 0x9c, 0xde, 0x8b, 0xd9,
	0x6d, 0x84, 0x8a, 0x59, 0xba, 0x2c, 0x96, 0xfc, 0x4f, 0xfd, 0x92, 0x7e, 0x55, 0xb5, 0x0b, 0x38,
	0x76, 0xa4, 0x28, 0xb7, 0x9d, 0x37, 0x6f, 0xdf, 0x9b, 0x79, 0x1a, 0x80, 0x34, 0xe1, 0xc2, 0x2f,
	0x39, 0x13, 0x0c, 0xf5, 0x72, 0x3b, 0x7b, 0x73, 0xcf, 0xd8, 0x7d, 0x4e, 0xe7, 0x0a, 0xd9, 0xd6,
	0xbf, 0xe6, 0x74, 0x57, 0x8a, 0x43, 0x43, 0x70, 0xff, 0xe9, 0xd0, 0x0f, 0x12, 0x2e, 0x70, 0x02,
	0x7a, 0x46, 0x6c, 0xcd, 0xd1, 0xbc, 0x51, 0xac, 0x67, 0x04, 0x1d, 0x18, 0x13, 0x5a, 0xa5, 0x3c,
	0x2b, 0x45, 0xc6, 0x0a, 0x5b, 0x57, 0x8d, 0x53, 0x08, 0x17, 0x30, 0x2c, 0x39, 0x23, 0x75, 0x2a,
	0x2a, 0xdb, 0x70, 0x0c, 0x6f, 0xbc, 0x98, 0xfa, 0xe5, 0xd6, 0x97, 0x6a, 0xfe, 0xba, 0x6d, 0x84,
	0x85, 0xe0, 0x87, 0xf8, 0xc8, 0xc3, 0x4b, 0x00, 0xc1, 0x44, 0x92, 0x47, 0x82, 0xee, 0x2a, 0xbb,
	0xef, 0x68, 0xde, 0x20, 0x3e, 0x41, 0xf0, 0x2d, 0x8c, 0x54, 0x15, 0xb0, 0x4a, 0xd8, 0x03, 0x47,
	0xf3, 0xb4, 0xf8, 0x01, 0xc0, 0xf7, 0x60, 0x56, 0x22, 0x11, 0x75, 0x65, 0x9b, 0x8e, 0xe6, 0x4d,
	0x16, 0xaf, 0x8e, 0x7e, 0x1b, 0x05, 0xc7, 0x6d, 0x7b, 0xf6, 0x05, 0x5e, 0x9e, 0x4d, 0x80, 0x16,
	0x18, 0xbf, 0xe9, 0xa1, 0x5d, 0x4f, 0x3e, 0xf1, 0x35, 0x0c, 0xf6, 0x49, 0x5e, 0x53, 0xb5, 0xd9,
	0x20, 0x6e, 0x8a, 0xcf, 0xfa, 0x95, 0xe6, 0x5e, 0x81, 0xd9, 0xc8, 0xe1, 0x10, 0xfa, 0x37, 0xb7,
	0x37, 0xa1, 0xd5, 0xc3, 0x31, 0x5c, 0x04, 0x71, 0xb8, 0xbc, 0x0b, 0x57, 0x96, 0x86, 0x00, 0xe6,
	0xfa, 0xdb, 0x32, 0x08, 0x57, 0x96, 0x2e, 0x1b, 0x9b, 0xaf, 0xd1, 0x7a, 0x1d, 0xae, 0x2c, 0xc3,
	0xb5, 0xc1, 0x94, 0xd3, 0x44, 0xe4, 0x71, 0x9a, 0xee, 0x4f, 0x78, 0x21, 0x3b, 0xdf, 0xeb, 0xa4,
	0x10, 0x99, 0x38, 0xe0, 0x14, 0xcc, 0x54, 0x31, 0x5b, 0x4e, 0x5b, 0xc9, 0xfd, 0xdb, 0xac, 0x22,
	0xd2, 0x66, 0xfe, 0x00, 0xe0, 0x0c, 0x86, 0x7f, 0x5a, 0x05, 0xdb, 0x50, 0x63, 0x1f, 0xeb, 0xc5,
	0x5f, 0x1d, 0xc6, 0xd2, 0x62, 0x43, 0xf9, 0x3e, 0x4b, 0x29, 0x5e, 0x82, 0x19, 0x70, 0x9a, 0x08,
	0x8a, 0xc3, 0x2e, 0xa5, 0xd9, 0xf1, 0xe5, 0xf6, 0xf0, 0x1d, 0x5c, 0x5c, 0x67, 0x05, 0xb9, 0x2d,
	0x28, 0x42, 0x07, 0x47, 0xe4, 0x8c, 0x32, 0x6f, 0x28, 0xcb, 0x3c, 0xc7, 0xa9, 0xdf, 0x1c, 0x91,
	0xdf, 0x1d, 0x91, 0x1f, 0xca, 0x23, 0x3a, 0xa5, 0x7f, 0xd4, 0xa4, 0xe7, 0x8f, 0x92, 0x3c, 0xed,
	0xe9, 0x83, 0xb9, 0xa2, 0x39, 0x15, 0xe7, 0x96, 0x4f, 0x68, 0xbb, 0x3d, 0xfc, 0x00, 0xa3, 0x25,
	0x21, 0x77, 0x4c, 0x1d, 0xa8, 0xd5, 0x7d, 0xe9, 0x42, 0x7c, 0x24, 0x3d, 0x89, 0xe9, 0x8e, 0xed,
	0xe9, 0x35, 0x67, 0xbb, 0xe7, 0xf9, 0x5b, 0x53, 0x99, 0x7d, 0xfa, 0x1f, 0x00, 0x00, 0xff, 0xff,
	0xf0, 0x97, 0xdc, 0x19, 0x2d, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CartServiceClient is the client API for CartService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CartServiceClient interface {
	Create(ctx context.Context, in *Cart, opts ...grpc.CallOption) (*Cart, error)
	FindOne(ctx context.Context, in *CartId, opts ...grpc.CallOption) (*Cart, error)
	FindAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (CartService_FindAllClient, error)
	Update(ctx context.Context, in *Cart, opts ...grpc.CallOption) (*Cart, error)
	Delete(ctx context.Context, in *CartId, opts ...grpc.CallOption) (*empty.Empty, error)
	AddToCart(ctx context.Context, in *CartQuantity, opts ...grpc.CallOption) (*Cart, error)
	RemoveFromCart(ctx context.Context, in *CartQuantity, opts ...grpc.CallOption) (*Cart, error)
}

type cartServiceClient struct {
	cc *grpc.ClientConn
}

func NewCartServiceClient(cc *grpc.ClientConn) CartServiceClient {
	return &cartServiceClient{cc}
}

func (c *cartServiceClient) Create(ctx context.Context, in *Cart, opts ...grpc.CallOption) (*Cart, error) {
	out := new(Cart)
	err := c.cc.Invoke(ctx, "/pb.CartService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cartServiceClient) FindOne(ctx context.Context, in *CartId, opts ...grpc.CallOption) (*Cart, error) {
	out := new(Cart)
	err := c.cc.Invoke(ctx, "/pb.CartService/FindOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cartServiceClient) FindAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (CartService_FindAllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CartService_serviceDesc.Streams[0], "/pb.CartService/FindAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &cartServiceFindAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CartService_FindAllClient interface {
	Recv() (*Cart, error)
	grpc.ClientStream
}

type cartServiceFindAllClient struct {
	grpc.ClientStream
}

func (x *cartServiceFindAllClient) Recv() (*Cart, error) {
	m := new(Cart)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cartServiceClient) Update(ctx context.Context, in *Cart, opts ...grpc.CallOption) (*Cart, error) {
	out := new(Cart)
	err := c.cc.Invoke(ctx, "/pb.CartService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cartServiceClient) Delete(ctx context.Context, in *CartId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.CartService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cartServiceClient) AddToCart(ctx context.Context, in *CartQuantity, opts ...grpc.CallOption) (*Cart, error) {
	out := new(Cart)
	err := c.cc.Invoke(ctx, "/pb.CartService/AddToCart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cartServiceClient) RemoveFromCart(ctx context.Context, in *CartQuantity, opts ...grpc.CallOption) (*Cart, error) {
	out := new(Cart)
	err := c.cc.Invoke(ctx, "/pb.CartService/RemoveFromCart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CartServiceServer is the server API for CartService service.
type CartServiceServer interface {
	Create(context.Context, *Cart) (*Cart, error)
	FindOne(context.Context, *CartId) (*Cart, error)
	FindAll(*empty.Empty, CartService_FindAllServer) error
	Update(context.Context, *Cart) (*Cart, error)
	Delete(context.Context, *CartId) (*empty.Empty, error)
	AddToCart(context.Context, *CartQuantity) (*Cart, error)
	RemoveFromCart(context.Context, *CartQuantity) (*Cart, error)
}

// UnimplementedCartServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCartServiceServer struct {
}

func (*UnimplementedCartServiceServer) Create(ctx context.Context, req *Cart) (*Cart, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedCartServiceServer) FindOne(ctx context.Context, req *CartId) (*Cart, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOne not implemented")
}
func (*UnimplementedCartServiceServer) FindAll(req *empty.Empty, srv CartService_FindAllServer) error {
	return status.Errorf(codes.Unimplemented, "method FindAll not implemented")
}
func (*UnimplementedCartServiceServer) Update(ctx context.Context, req *Cart) (*Cart, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedCartServiceServer) Delete(ctx context.Context, req *CartId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedCartServiceServer) AddToCart(ctx context.Context, req *CartQuantity) (*Cart, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddToCart not implemented")
}
func (*UnimplementedCartServiceServer) RemoveFromCart(ctx context.Context, req *CartQuantity) (*Cart, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFromCart not implemented")
}

func RegisterCartServiceServer(s *grpc.Server, srv CartServiceServer) {
	s.RegisterService(&_CartService_serviceDesc, srv)
}

func _CartService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cart)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CartService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartServiceServer).Create(ctx, req.(*Cart))
	}
	return interceptor(ctx, in, info, handler)
}

func _CartService_FindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CartId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartServiceServer).FindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CartService/FindOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartServiceServer).FindOne(ctx, req.(*CartId))
	}
	return interceptor(ctx, in, info, handler)
}

func _CartService_FindAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CartServiceServer).FindAll(m, &cartServiceFindAllServer{stream})
}

type CartService_FindAllServer interface {
	Send(*Cart) error
	grpc.ServerStream
}

type cartServiceFindAllServer struct {
	grpc.ServerStream
}

func (x *cartServiceFindAllServer) Send(m *Cart) error {
	return x.ServerStream.SendMsg(m)
}

func _CartService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cart)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CartService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartServiceServer).Update(ctx, req.(*Cart))
	}
	return interceptor(ctx, in, info, handler)
}

func _CartService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CartId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CartService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartServiceServer).Delete(ctx, req.(*CartId))
	}
	return interceptor(ctx, in, info, handler)
}

func _CartService_AddToCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CartQuantity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartServiceServer).AddToCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CartService/AddToCart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartServiceServer).AddToCart(ctx, req.(*CartQuantity))
	}
	return interceptor(ctx, in, info, handler)
}

func _CartService_RemoveFromCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CartQuantity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartServiceServer).RemoveFromCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CartService/RemoveFromCart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartServiceServer).RemoveFromCart(ctx, req.(*CartQuantity))
	}
	return interceptor(ctx, in, info, handler)
}

var _CartService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CartService",
	HandlerType: (*CartServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CartService_Create_Handler,
		},
		{
			MethodName: "FindOne",
			Handler:    _CartService_FindOne_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _CartService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CartService_Delete_Handler,
		},
		{
			MethodName: "AddToCart",
			Handler:    _CartService_AddToCart_Handler,
		},
		{
			MethodName: "RemoveFromCart",
			Handler:    _CartService_RemoveFromCart_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FindAll",
			Handler:       _CartService_FindAll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "cart.proto",
}
