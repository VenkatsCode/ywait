// Code generated by protoc-gen-go. DO NOT EDIT.
// source: checkout.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckoutInput struct {
	CartId               string   `protobuf:"bytes,1,opt,name=cartId,proto3" json:"cartId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckoutInput) Reset()         { *m = CheckoutInput{} }
func (m *CheckoutInput) String() string { return proto.CompactTextString(m) }
func (*CheckoutInput) ProtoMessage()    {}
func (*CheckoutInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_a95bdbc7e39fe4fd, []int{0}
}

func (m *CheckoutInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckoutInput.Unmarshal(m, b)
}
func (m *CheckoutInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckoutInput.Marshal(b, m, deterministic)
}
func (m *CheckoutInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckoutInput.Merge(m, src)
}
func (m *CheckoutInput) XXX_Size() int {
	return xxx_messageInfo_CheckoutInput.Size(m)
}
func (m *CheckoutInput) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckoutInput.DiscardUnknown(m)
}

var xxx_messageInfo_CheckoutInput proto.InternalMessageInfo

func (m *CheckoutInput) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

func init() {
	proto.RegisterType((*CheckoutInput)(nil), "pb.CheckoutInput")
}

func init() { proto.RegisterFile("checkout.proto", fileDescriptor_a95bdbc7e39fe4fd) }

var fileDescriptor_a95bdbc7e39fe4fd = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xce, 0x48, 0x4d,
	0xce, 0xce, 0x2f, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x92, 0x92,
	0x4e, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x8b, 0x24, 0x95, 0xa6, 0xe9, 0xa7, 0xe6, 0x16,
	0x94, 0x54, 0x42, 0x14, 0x28, 0xa9, 0x73, 0xf1, 0x3a, 0x43, 0xb5, 0x78, 0xe6, 0x15, 0x94, 0x96,
	0x08, 0x89, 0x71, 0xb1, 0x25, 0x27, 0x16, 0x95, 0x78, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x06, 0x41, 0x79, 0x46, 0x5e, 0x5c, 0xfc, 0x30, 0x85, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9,
	0x42, 0xe6, 0x5c, 0x1c, 0x30, 0x21, 0x21, 0x41, 0xbd, 0x82, 0x24, 0x3d, 0x14, 0x93, 0xa4, 0xc4,
	0xf4, 0x20, 0x16, 0xeb, 0xc1, 0x2c, 0xd6, 0x73, 0x05, 0x59, 0xac, 0xc4, 0x90, 0xc4, 0x06, 0x16,
	0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x33, 0x22, 0x0d, 0x79, 0xae, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CheckoutServiceClient is the client API for CheckoutService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckoutServiceClient interface {
	Checkout(ctx context.Context, in *CheckoutInput, opts ...grpc.CallOption) (*empty.Empty, error)
}

type checkoutServiceClient struct {
	cc *grpc.ClientConn
}

func NewCheckoutServiceClient(cc *grpc.ClientConn) CheckoutServiceClient {
	return &checkoutServiceClient{cc}
}

func (c *checkoutServiceClient) Checkout(ctx context.Context, in *CheckoutInput, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.CheckoutService/Checkout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckoutServiceServer is the server API for CheckoutService service.
type CheckoutServiceServer interface {
	Checkout(context.Context, *CheckoutInput) (*empty.Empty, error)
}

// UnimplementedCheckoutServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCheckoutServiceServer struct {
}

func (*UnimplementedCheckoutServiceServer) Checkout(ctx context.Context, req *CheckoutInput) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Checkout not implemented")
}

func RegisterCheckoutServiceServer(s *grpc.Server, srv CheckoutServiceServer) {
	s.RegisterService(&_CheckoutService_serviceDesc, srv)
}

func _CheckoutService_Checkout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckoutInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckoutServiceServer).Checkout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CheckoutService/Checkout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckoutServiceServer).Checkout(ctx, req.(*CheckoutInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _CheckoutService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CheckoutService",
	HandlerType: (*CheckoutServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Checkout",
			Handler:    _CheckoutService_Checkout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "checkout.proto",
}
