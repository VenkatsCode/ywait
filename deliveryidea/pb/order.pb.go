// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CustomerInfo struct {
	CustomerId           string   `protobuf:"bytes,1,opt,name=customerId,proto3" json:"customerId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DeliveryLocation     string   `protobuf:"bytes,3,opt,name=deliveryLocation,proto3" json:"deliveryLocation,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerInfo) Reset()         { *m = CustomerInfo{} }
func (m *CustomerInfo) String() string { return proto.CompactTextString(m) }
func (*CustomerInfo) ProtoMessage()    {}
func (*CustomerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *CustomerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerInfo.Unmarshal(m, b)
}
func (m *CustomerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerInfo.Marshal(b, m, deterministic)
}
func (m *CustomerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerInfo.Merge(m, src)
}
func (m *CustomerInfo) XXX_Size() int {
	return xxx_messageInfo_CustomerInfo.Size(m)
}
func (m *CustomerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerInfo proto.InternalMessageInfo

func (m *CustomerInfo) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *CustomerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CustomerInfo) GetDeliveryLocation() string {
	if m != nil {
		return m.DeliveryLocation
	}
	return ""
}

func (m *CustomerInfo) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type Order struct {
	OrderId              string        `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	StoreLocation        string        `protobuf:"bytes,2,opt,name=storeLocation,proto3" json:"storeLocation,omitempty"`
	Customer             *CustomerInfo `protobuf:"bytes,3,opt,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Order) GetStoreLocation() string {
	if m != nil {
		return m.StoreLocation
	}
	return ""
}

func (m *Order) GetCustomer() *CustomerInfo {
	if m != nil {
		return m.Customer
	}
	return nil
}

type OrderId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderId) Reset()         { *m = OrderId{} }
func (m *OrderId) String() string { return proto.CompactTextString(m) }
func (*OrderId) ProtoMessage()    {}
func (*OrderId) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func (m *OrderId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderId.Unmarshal(m, b)
}
func (m *OrderId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderId.Marshal(b, m, deterministic)
}
func (m *OrderId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderId.Merge(m, src)
}
func (m *OrderId) XXX_Size() int {
	return xxx_messageInfo_OrderId.Size(m)
}
func (m *OrderId) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderId.DiscardUnknown(m)
}

var xxx_messageInfo_OrderId proto.InternalMessageInfo

func (m *OrderId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*CustomerInfo)(nil), "pb.CustomerInfo")
	proto.RegisterType((*Order)(nil), "pb.Order")
	proto.RegisterType((*OrderId)(nil), "pb.OrderId")
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077) }

var fileDescriptor_cd01338c35d87077 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x51, 0xed, 0x4a, 0xc3, 0x40,
	0x10, 0x6c, 0xd2, 0xd6, 0xda, 0x4d, 0x95, 0xb2, 0x88, 0xc4, 0x08, 0x2a, 0xc1, 0x1f, 0x22, 0x72,
	0xc5, 0xfa, 0x08, 0x22, 0x22, 0x08, 0x95, 0xfa, 0x04, 0xf9, 0xd8, 0xd6, 0x40, 0x92, 0x3d, 0xae,
	0x97, 0x42, 0xff, 0xfb, 0xe0, 0x92, 0xbb, 0x5e, 0xac, 0xf8, 0xef, 0x66, 0x66, 0x6f, 0x67, 0x96,
	0x81, 0x80, 0x55, 0x4e, 0x4a, 0x48, 0xc5, 0x9a, 0xd1, 0x97, 0x69, 0x74, 0xb9, 0x66, 0x5e, 0x97,
	0x34, 0x33, 0x4c, 0xda, 0xac, 0x66, 0x54, 0x49, 0xbd, 0xb3, 0x03, 0xf1, 0xb7, 0x07, 0x93, 0xe7,
	0x66, 0xa3, 0xb9, 0x22, 0xf5, 0x56, 0xaf, 0x18, 0xaf, 0x00, 0x32, 0x87, 0xf3, 0xd0, 0xbb, 0xf1,
	0xee, 0xc6, 0xcb, 0x03, 0x06, 0x11, 0x06, 0x75, 0x52, 0x51, 0xe8, 0x1b, 0xc5, 0xbc, 0xf1, 0x1e,
	0xa6, 0x39, 0x95, 0xc5, 0x96, 0xd4, 0xee, 0x9d, 0xb3, 0x44, 0x17, 0x5c, 0x87, 0x7d, 0xa3, 0xff,
	0xe3, 0xf1, 0x0c, 0x86, 0xf2, 0x8b, 0x6b, 0x0a, 0x07, 0x66, 0xc0, 0x82, 0xb8, 0x81, 0xe1, 0xa2,
	0x8d, 0x8d, 0x21, 0x8c, 0x4c, 0xfe, 0xce, 0xdb, 0x41, 0xbc, 0x85, 0x93, 0x8d, 0x66, 0x45, 0x9d,
	0x83, 0x4d, 0xf0, 0x97, 0xc4, 0x07, 0x38, 0x76, 0x61, 0x4d, 0x84, 0x60, 0x3e, 0x15, 0x32, 0x15,
	0x87, 0x27, 0x2e, 0xbb, 0x89, 0xf8, 0x02, 0x46, 0x8b, 0xfd, 0xfa, 0x53, 0xf0, 0x0b, 0xe7, 0xe9,
	0x17, 0xf9, 0x3c, 0x85, 0x89, 0x91, 0x3e, 0x49, 0x6d, 0x8b, 0x8c, 0xf0, 0x1a, 0xfa, 0xaf, 0xa4,
	0x31, 0x68, 0xb7, 0xed, 0xff, 0x44, 0xe3, 0x0e, 0xc4, 0x3d, 0x7c, 0x04, 0xf8, 0x28, 0x93, 0x8c,
	0xec, 0x1d, 0xbf, 0x52, 0x74, 0x2e, 0x6c, 0x01, 0xc2, 0x15, 0x20, 0x5e, 0xda, 0x02, 0xe2, 0x5e,
	0x7a, 0x64, 0x98, 0xa7, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4f, 0xb7, 0xe6, 0x8f, 0xb3, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	Get(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*Order, error)
	PlaceOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*empty.Empty, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) Get(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/pb.OrderService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) PlaceOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.OrderService/PlaceOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	Get(context.Context, *OrderId) (*Order, error)
	PlaceOrder(context.Context, *Order) (*empty.Empty, error)
}

// UnimplementedOrderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServiceServer struct {
}

func (*UnimplementedOrderServiceServer) Get(ctx context.Context, req *OrderId) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedOrderServiceServer) PlaceOrder(ctx context.Context, req *Order) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlaceOrder not implemented")
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).Get(ctx, req.(*OrderId))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_PlaceOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).PlaceOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderService/PlaceOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).PlaceOrder(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _OrderService_Get_Handler,
		},
		{
			MethodName: "PlaceOrder",
			Handler:    _OrderService_PlaceOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}
